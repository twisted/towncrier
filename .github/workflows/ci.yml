name: CI

on:
  push:
    branches: [ trunk ]
    tags: [ "**" ]
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.task.name}} - ${{ matrix.os.name }} ${{ matrix.python.name }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Linux
            runs-on: ubuntu-latest
        python:
          - name: CPython 3.9
            action: 3.9
        task:
          - name: Build
            nox: build

    steps:
    - uses: actions/checkout@v3

    - name: Set up ${{ matrix.python.name }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python.action }}

    - name: Install dependencies
      run: python -m pip install --upgrade pip nox

    - uses: twisted/python-info-action@v1

    - run: nox -e ${{ matrix.task.nox }}

    - name: Publish
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  test-linux:
    name: ${{ matrix.task.name}} - Linux ${{ matrix.python.name }}
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        python:
          - name: CPython 3.7
            action: 3.7
          - name: CPython 3.8
            action: 3.8
          - name: CPython 3.9
            action: 3.9
          - name: CPython 3.10
            action: '3.10'
          - name: CPython 3.11
            action: '3.11.0-beta - 3.11'
          - name: PyPy 3.7
            action: pypy3.7
          - name: PyPy 3.8
            action: pypy3.8
        task:
          - name: Test
            nox: tests

    steps:
    - uses: actions/checkout@v3

    - name: Download package files
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Set up ${{ matrix.python.name }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python.action }}

    - name: Install dependencies
      run: python -m pip install --upgrade pip nox codecov coverage[toml]

    - uses: twisted/python-info-action@v1

    - run: nox --python ${{ matrix.python.action }} -e ${{ matrix.task.nox }} -- --use-wheel dist/*.whl

    - name: Codecov
      run: |
        codecov -n "GitHub Actions - ${{ matrix.task.name}} - ${{ matrix.os.name }} ${{ matrix.python.name }}"


  test-windows:
    name: ${{ matrix.task.name}} - Windows ${{ matrix.python.name }}
    runs-on: windows-latest
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        python:
          - name: CPython 3.9
            action: '3.9'
        task:
          - name: Test
            nox: tests

    steps:
    - uses: actions/checkout@v3

    - name: Download package files
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Set up ${{ matrix.python.name }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python.action }}

    - name: Install dependencies
      run: python -m pip install --upgrade pip nox codecov coverage[toml]

    - uses: twisted/python-info-action@v1

    - run: nox --python ${{ matrix.python.action }} -e ${{ matrix.task.nox }} -- --use-wheel dist/*.whl

    - name: Codecov
      run: |
        codecov -n "GitHub Actions - ${{ matrix.task.name}} - ${{ matrix.os.name }} ${{ matrix.python.name }}"

  check:
    name: ${{ matrix.task.name}} - ${{ matrix.python.name }}
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        python:
          # Using second most recent minor release for whatever little
          # increase in stability over using the latest minor.
          - name: CPython 3.9
            python-version: '3.9'
        task:
          - name: Check Newsfragment
            nox: check_newsfragment
            run-if: ${{ github.head_ref != 'pre-commit-ci-update-config' }}
          - name: Check package manifest
            nox: check_manifest
            run-if: true
          - name: Check mypy
            nox: typecheck
            run-if: true

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Download package files
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Set up ${{ matrix.python.name }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python.python-version }}

    - name: Install dependencies
      run: python -m pip install --upgrade pip nox

    - uses: twisted/python-info-action@v1

    - run: nox -e ${{ matrix.task.nox }}
      if: ${{ matrix.task.run-if }}


  pypi-publish:
    # https://github.community/t/is-it-possible-to-require-all-github-actions-tasks-to-pass-without-enumerating-them/117957/4?u=graingert
    name: Check tag and publish
    runs-on: ubuntu-latest

    needs:
      - build
      - test-linux
      - test-windows
    steps:
    - uses: actions/checkout@v3

    - name: Download package files
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install pep517

    - name: Display structure of files to be pushed
      run: ls --recursive dist/

    - name: Check matched tag version and branch version - on tag
      if: startsWith(github.ref, 'refs/tags/')
      run: python admin/check_tag_version_match.py "${{ github.ref }}"

    - name: Publish to PyPI - on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: pypa/gh-action-pypi-publish@37f50c210e3d2f9450da2cd423303d6a14a6e29f
      with:
        password: ${{ secrets.PYPI_TOKEN }}
        verbose: true

  # This is a meta-job to simplify PR CI enforcement configuration in GitHub.
  # Inside the GitHub config UI you only configure this job as required.
  # All the extra requirements are defined "as code" as part of the `needs`
  # list for this job.
  all:
    name: All success
    runs-on: ubuntu-latest
    # The always() part is very important.
    # If not set, the job will be skipped on failing dependencies.
    if: always()
    needs:
      # This is the list of CI job that we are interested to be green before
      # a merge.
      - build
      - test-linux
      - test-windows
      - check
      - pypi-publish
    steps:
      - name: Require all successes
        uses: re-actors/alls-green@3a2de129f0713010a71314c74e33c0e3ef90e696
        with:
          jobs: ${{ toJSON(needs) }}
